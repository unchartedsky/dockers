name: wordpress

on:
  push:
    paths:
      - ".github/workflows/wordpress.yml"
      - "wordpress/**"
  schedule:
    # * is a special character in YAML so you have to quote this string
    # At 17:00
    # KST 기준: 2시
    # https://crontab.guru/#0_17_*_*_*
    - cron: "0 17 * * *"

defaults:
  run:
    # shell: bash
    # shell: bash --init-file /home/runner/.pyenvrc -leo pipefail {0}
    shell: bash -leo pipefail {0}

jobs:
  build:
    # contains function is not case sensitive
    if: |
      !contains(github.event.commits[0].message, '[skip ci]')
      && !startswith(github.event.commits[0].message, 'skip ci ')
      && !contains(github.event.commits[0].message, '[wip]')
      && !startswith(github.event.commits[0].message, 'wip ')
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.workflow }}
    steps:
      - name: Env
        run: |
          env | sort

      - uses: actions/checkout@v3
        with:
          lfs: true
          submodules: true

      - name: Prepare
        id: prep
        run: |
          VERSION=edge
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            VERSION=nightly
          elif [[ "${{ github.event_name }}" != "pull_request" ]]; then
            VERSION=${GITHUB_REF#refs/heads/}
          else
            VERSION=${GITHUB_HEAD_REF}
          fi
          VERSION=$(echo "${VERSION}" | sed -r 's/\//_/g')
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          if [[ "${VERSION}" == "master" ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${GITHUB_REF#refs/tags/v}"
          fi

          SHORT_ID=$(echo ${GITHUB_SHA} | cut -c -7)
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${SHORT_ID}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Test
        run: |
          set -x
          docker version
          cat /etc/docker/daemon.json
          docker buildx version
          docker buildx ls

      - name: Prepare
        id: prepare
        run: |
          set -x

          cd "${THIS_DIR}"
          ./prepare.sh

          IMAGE_VERSION=$(cat "tmp/base_image_version.txt")
          TAGS="$TAGS,$DOCKER_IMAGE:$IMAGE_VERSION"
          echo ::set-output name=tags::${TAGS}
        env:
          THIS_DIR: ${{ github.workspace }}/${{ github.workflow }}
          TAGS: ${{ steps.prep.outputs.tags }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          file: ${{ github.workspace }}/${{ github.workflow }}/Dockerfile
          context: ${{ github.workspace }}/${{ github.workflow }}
          platforms: linux/amd64
          tags: ${{ steps.prep.outputs.tags }}
          pull: true
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
